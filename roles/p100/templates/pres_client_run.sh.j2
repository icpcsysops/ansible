#!/bin/bash
#
# Purpose: display presentations controlled by a CDS
#

export ROOTDIR=$( dirname "${BASH_SOURCE}[0]" )
cd $ROOTDIR

# additions for run
DISPLAY=:0
export DISPLAY
umask 0077
ulimit -c unlimited
xset -dpms s off s noblank s 0 0 s noexpose
gsettings set org.gnome.settings-daemon.plugins.power active false
gsettings set org.gnome.desktop.screensaver idle-activation-enabled false
gsettings set org.gnome.desktop.session idle-delay 0
# end additions for run

{% if p100_default_presentation|default(false) -%}
export ICPC_DEFAULT_PRESENTATION={{ p100_default_presentation }}
{% endif -%}
{% if p100_icpc_tools_ip|default(false) -%}
export ICPC_TOOLS_IP={{ ansible_host }}
{% endif -%}


sleep 5
while true; do
	java -Xmx1024m -cp "lib/*" org.icpc.tools.presentation.contest.internal.ClientLauncher https://{{ cds_ip }}:{{ cds_port }}/api/contests/{{ cds_endpoint | default("") }} presentation {{ cds_p100_password }} --name team {{ p100_args | default("") }}
  result=$?
  echo $result >> /p/resultcode.txt
  if [ $result = 254 ]
  then
    echo Update downloaded, applying
    rm -rf lib
    mv -f update/* .
    continue
  elif [ $result = 134 ]
  then
    # seg abort, restart, seen in nac2020
    continue
  elif [ $result = 139 ]
  then
    # seg fault, restart
    continue
  fi
  [[ $result = 255 ]] || break
done
