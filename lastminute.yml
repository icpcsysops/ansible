---
- name: configure contestant machines
  hosts: contestants
  roles:
    - role: cups
    - role: ldapclient
      tags: ldapclient
      when: ldap_domain is defined
    - role: hyperthreadingdisabled
    - role: reverseproxy
    - role: p100

  tasks:
    - name: remove uid 1000 user
      ansible.builtin.user:
        name: "icpc2021" # TODO update this every year, as I can't just do a uid 1000 delete
        state: absent
      when: root_password is defined

- name: configure ldap server
  hosts: ldapserver
  roles:
    - role: ldapserver
      tags: ldapserver

- name: configure the squid server
  hosts: squidserver
  roles:
    - role: reverseproxy
      reverseproxy_server: true
      tags: reverseproxy

- name: Send syslogs to `backup`
  hosts: all:!backup
  tasks:
    - name: point rsyslog to backup
      ansible.builtin.copy:
        content: |
          # ship the important logs to backup
          kern.warning                    @backup
          auth,authpriv.*                 @backup
        dest: /etc/rsyslog.d/70-clients.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart rsyslog
  handlers:
    - name: restart rsyslog
      service:
        name: rsyslog
        state: restarted

- name: lastminute config for all hosts
  hosts: all
  roles:
    - role: apt
    - role: stuvusIT.systemd-timesyncd
      timesync_timezone: "{{ timezone }}"
      timesync_ntp_hosts:
        - "{{ baseip }}.208"
        - "{{ baseip }}.209"
        - "{{ baseip }}.210"
      timesync_fallback_ntp_hosts:
        - "{{ baseip }}.208"
        - "{{ baseip }}.209"
        - "{{ baseip }}.210"
      tags: systemd-timesyncd

  tasks:
    - name: Pre-generate the kernel flags for ansible usage
      set_fact:
        procline: "quiet ipv6.disable=1 cgroup_enable=memory swapaccount=1"
    - name: Ensure /etc/default/grub has proper GRUB_CMDLINE_LINUX_DEFAULT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*$'
        replace: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ procline }}\""
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub
        - reboot
    - name: Ensure /etc/default/grub has proper GRUB_TIMEOUT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: "GRUB_TIMEOUT=.*"
        replace: "GRUB_TIMEOUT=3"
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub

    - name: update root password (if root_password already crypted)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password }}"
      when:
        - root_password is defined
        - '"$6$" in root_password'
    - name: update root password (if root_password is cleartext)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password | password_hash('sha512', job_sheet) }}"
      when:
        - root_password is defined
        - '"$6$" not in root_password'

    - name: workaround nautilus auto-mounting
      ansible.builtin.file:
        path: /media
        owner: root
        group: root
        mode: "0700"
    - name: gvfs/gvfsd permission tweaking to disable
      ansible.builtin.file:
        path: /usr/lib/gvfs/{{ item }}
        owner: root
        group: root
        mode: "0744"
      loop:
        - "gvfs-udisks2-volume-monitor"
        - "gvfsd-burn"
        - "gvfsd-computer"
        - "gvfsd-localtest"
    - name: place 21_icpc-disable-automount-schema.gschema.override
      ansible.builtin.copy:
        content: |
          [org.gnome.desktop.media-handling]
          automount-open=false
          automount=false
        dest: /usr/share/glib-2.0/schemas/21_icpc-disable-automount-schema.gschema.override
        owner: root
        group: root
        mode: '0644'
      notify: glib-compile-schemas

    - name: Pre-generate the kernel flags for ansible usage
      set_fact:
        procline: "quiet ipv6.disable=1 cgroup_enable=memory swapaccount=1"
    - name: Ensure /etc/default/grub has proper GRUB_CMDLINE_LINUX_DEFAULT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*'
        replace: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ procline }}\""
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub
        - reboot
    - name: Ensure /etc/default/grub has proper GRUB_TIMEOUT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: "GRUB_TIMEOUT=.*"
        replace: "GRUB_TIMEOUT=3"
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub

    - shell: git rev-list --full-history --all --abbrev-commit | head -1
      become: false
      register: git_revision
      delegate_to: 127.0.0.1
      changed_when: false
    - name: Log version of script on client
      community.general.syslogger:
        ident: "lastminute"
        msg: "Ansible applied {{ version }} - ({{ git_revision.stdout }})"
        priority: "notice"
      changed_when: false
  handlers:
    - name: update grub
      command: /usr/sbin/update-grub
    - name: reboot
      reboot:
    - name: glib-compile-schemas
      command: glib-compile-schemas /usr/share/glib-2.0/schemas
