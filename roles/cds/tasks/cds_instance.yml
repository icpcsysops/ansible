---
# These tasks configure the CDS
#

# WLP_USER_DIR = the place where we put each instance (cds/live/p100)
# WLP_OUTPUT_DIR = the place it writes random temp files and whatnot

- name: Load accounts from yaml
  ansible.builtin.include_vars:
    name: cdsaccounts-{{ cds_name }}
    file: "{{ cds_instance.accounts }}"

- name: Set facts from the include context
  ansible.builtin.set_fact:
    cds_instance_name: "{{ cds_name }}"
    cds_http_port: "{{ cds_instance.http_port }}"
    cds_https_port: "{{ cds_instance.https_port }}"
    cds_contests: "{{ cds_instance.contests }}"
    cds_accounts: "{{ lookup('vars', 'cdsaccounts-' + cds_name)['accounts'] }}"
    cds_needs_restart: "{{ needs_restart }}"

- name: Create CDS directories
  ansible.builtin.file:
    path: /var/lib/cds/{{ cds_instance_name }}/resources/security
    state: directory
    owner: cds
    group: cds
    mode: '0755'

- name: Copy the key.p12 for the instance
  ansible.builtin.copy:
    src: files/cds-key.p12
    dest: /var/lib/cds/{{ cds_instance_name }}/resources/security/key.p12
    owner: cds
    group: cds
    mode: "0640"
  register: keyp12_updated

- name: "Update cds_needs_restart: after updating the key.p12 (ssl certs)"
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or keyp12_updated.changed }}"

- name: Make sure directories exist
  ansible.builtin.file:
    state: directory
    owner: cds
    group: cds
    mode: '0755'
    path: /srv/cds/wlp/usr/servers/{{ cds_instance_name }}/{{ item }}
  with_items:
    - apps
    - config

- name: Symlink CDS war to the instance
  ansible.builtin.file:
    state: link
    force: true
    src: /srv/cds/CDS.war
    dest: /srv/cds/wlp/usr/servers/{{ cds_instance_name }}/apps/CDS.war

- name: Populate CDS server.xml
  ansible.builtin.template:
    src: server.xml.j2
    dest: /srv/cds/wlp/usr/servers/{{ cds_instance_name }}/server.xml
    owner: cds
    group: cds
    mode: '0644'
  register: server_updated

- name: Update cds_needs_restart (after server.xml)
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or server_updated.changed }}"

- name: Populate CDS accounts.yaml
  ansible.builtin.template:
    src: accounts.yaml.j2
    dest: /srv/cds/wlp/usr/servers/{{ cds_instance_name }}/config/accounts.yaml
    owner: cds
    group: cds
    mode: '0600'
  register: accounts_updated

- name: Update cds_needs_restart (after accounts.yaml)
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or accounts_updated.changed }}"

- name: Populate CDS cdsConfig.xml
  ansible.builtin.template:
    src: cdsConfig.xml.j2
    dest: /srv/cds/wlp/usr/servers/{{ cds_instance_name }}/config/cdsConfig.xml
    owner: cds
    group: cds
    mode: '0600'
  register: cds_config_updated

- name: Update cds_needs_restart (after cdsConfig.xml)
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or cds_config_updated.changed }}"

- name: Create symlink to the git repo
  ansible.builtin.file:
    src: /mnt/{{ ansible_hostname }}/cds/contest_repo/contests/{{ item.path }}
    dest: /srv/cds/contests/{{ item.name }}
    state: link
  loop: "{{ cds_contests }}"

- name: Create contest specific directory
  ansible.builtin.file:
    path: /srv/cds/contests/{{ item.name }}
    state: directory
    owner: cds
    group: cds
    mode: '0755'
  loop: "{{ cds_contests }}"

- name: Copy cds systemd unit file
  ansible.builtin.template:
    src: templates/cds.service.j2
    dest: /etc/systemd/system/{{ cds_instance_name }}.service
    mode: '0644'
  register: unit_updated

- name: "Update cds_needs_restart: after service for {{ cds_instance_name }}"
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or unit_updated.changed }}"

- name: Ensure HIDE_COUNTRY_INFO is present
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: 'HIDE_COUNTRY_INFO=yes'
    create: true
    mode: '0644'
  register: environment_changed
  when: hide_country_info

- name: Ensure HIDE_COUNTRY_INFO is not present
  ansible.builtin.lineinfile:
    path: /etc/environment
    state: absent
    regexp: '^HIDE_COUNTRY_INFO=yes'
    mode: '0644'
  register: environment_changed
  when: not hide_country_info

- name: "Update cds_needs_restart: after environment for {{ cds_instance_name }}"
  ansible.builtin.set_fact:
    cds_needs_restart: "{{ cds_needs_restart | bool or environment_changed.changed }}"

- name: Restart+enable cds instance
  ansible.builtin.systemd:
    name: "{{ cds_instance_name }}"
    enabled: true
    state: restarted
    daemon_reload: true
  when: cds_needs_restart
