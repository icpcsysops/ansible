*filter
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# LOGGING / DEBUGGING
-N accept-in-log
-A accept-in-log -j LOG --log-level 4 --log-prefix "accept-in-log:"
-A accept-in-log -j ACCEPT
-N accept-out-log
-A accept-out-log -j LOG --log-level 4 --log-prefix "accept-out-log:"
-A accept-out-log -j ACCEPT
-N drop-n-log
-A drop-n-log -j LOG -m limit --limit 5/m --limit-burst 7 --log-level 4 --log-prefix "DENIED:"
-A drop-n-log -j DROP

# internal interface
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# something on login or usb plugin causes this traffic
-A OUTPUT -p udp -m udp --dport 137 -j REJECT
-A OUTPUT -p udp -m udp --dport 1124 -j REJECT
-A OUTPUT -p udp -m udp --dport 3289 -j REJECT
-A OUTPUT -p udp -m udp --dport 5353 -j REJECT
-A OUTPUT -p udp -m udp --dport 8610 -j REJECT
-A OUTPUT -p udp -m udp --dport 8612 -j REJECT
# other cups snmp stuff to drop
-A OUTPUT -p udp -m udp -d 10.3.3.149 --dport 161 -j DROP
# some app is triggering these
-A OUTPUT -p udp -m udp --dport 53 -d 1.0.0.1 -j REJECT
-A OUTPUT -p udp -m udp --dport 53 -d 1.1.1.1 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 1.0.0.1 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 1.1.1.1 -j REJECT
# something trying to reach multicast foo
-A OUTPUT -d 224.0.0.22 -j REJECT
-A OUTPUT -p udp -m udp --dport 3702 -d 239.255.255.250 -j REJECT
# jetbrains crap
-A OUTPUT -p udp -m udp --dport 53 -d 9.9.9.10 -j REJECT
-A OUTPUT -p udp -m udp --dport 53 -d 149.112.112.10 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 9.9.9.10 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 149.112.112.10 -j REJECT
# other dns crap
-A OUTPUT -p udp -m udp --dport 53 -d 8.8.8.8 -j REJECT
-A OUTPUT -p udp -m udp --dport 53 -d 8.8.4.4 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 8.8.8.8 -j REJECT
-A FORWARD -p udp -m udp --dport 53 -d 8.8.4.4 -j REJECT
# router os crap
-A INPUT -p udp -m udp --dport 5678 -j REJECT


# prom from the backup
-A INPUT -p tcp -m tcp --dport 9100 -s 10.3.3.210 -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport 9100 -d 10.3.3.210 -j ACCEPT

# http to/from scoreboard
-A INPUT -p tcp --sport 80 -s 10.3.3.208/31 -j ACCEPT
-A OUTPUT -p tcp --dport 80 -d 10.3.3.208/31 -j ACCEPT

{% if enable_reverseproxy -%}
#TODO: make the ip for reverseproxy a lookup/variable/something better than hardcoded
# http(s) to/from reverseproxy
-A INPUT -p tcp --sport 80 -s 10.3.3.205/32 -j ACCEPT
-A OUTPUT -p tcp --dport 80 -d 10.3.3.205/32 -j ACCEPT
-A INPUT -p tcp --sport 443 -s 10.3.3.205/32 -j ACCEPT
-A OUTPUT -p tcp --dport 443 -d 10.3.3.205/32 -j ACCEPT

{% else -%}
# https to/from ccs primary
-A INPUT -p tcp --sport 443 -s {{ ccs_ip }}/32 -j ACCEPT
-A OUTPUT -p tcp --dport 443 -d {{ ccs_ip }}/32 -j ACCEPT

{% endif -%}

# https to/from packages
-A INPUT -p tcp --sport 443 -s 10.3.3.209/32 -j ACCEPT
-A OUTPUT -p tcp --dport 443 -d 10.3.3.209/32 -j ACCEPT

# ntp
{% for host in groups['ntpservers'] -%}
-A OUTPUT -p tcp --dport 123 -d {{ hostvars[host].ansible_host }} -j ACCEPT
-A OUTPUT -p udp --dport 123 -d {{ hostvars[host].ansible_host }} -j ACCEPT
-A INPUT -p tcp --sport 123 -s {{ hostvars[host].ansible_host }} -j ACCEPT
-A INPUT -p udp --sport 123 -s {{ hostvars[host].ansible_host }} -j ACCEPT
{% endfor %}
# why the server gateway?
-A OUTPUT -p tcp --dport 123 -d 10.3.3.254 -j ACCEPT
-A OUTPUT -p udp --dport 123 -d 10.3.3.254 -j ACCEPT

# p100 uses https on port {{ cds_port }}
-A OUTPUT -p tcp --dport {{ cds_port }} -d {{ cds_ip }}/32 -j ACCEPT
-A INPUT -p tcp --sport {{ cds_port }} -s {{ cds_ip }}/32 -j ACCEPT

# ssh inbound
-A INPUT -p tcp -m tcp --dport 22 -s 10.3.3.208/29 -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport 22 -d 10.3.3.208/29 -j ACCEPT

{% if enable_vlc -%}
# vlc webcam inbound
-A INPUT -p tcp -m tcp --dport 8080 -s {{ cds_ip }}/32 -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport 8080 -d {{ cds_ip }}/32 -j ACCEPT

# vlc screen inbound
-A INPUT -p tcp -m tcp --dport 9090 -s {{ cds_ip }}/32 -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport 9090 -d {{ cds_ip }}/32 -j ACCEPT

{% endif %}
{% if enable_mediamtx %}
# mediamtx
-A INPUT -p tcp -m tcp --dport 8888 -s {{ cds_ip }}/32 -j ACCEPT
-A OUTPUT -p tcp -m tcp --sport 8888 -d {{ cds_ip }}/32 -j ACCEPT

{% endif %}
# ssh to backup (used by rsync)
-A INPUT -p tcp -m tcp --sport 22 -s 10.3.3.213 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 22 -d 10.3.3.213 -j ACCEPT
-A INPUT -p tcp -m tcp --sport 22 -s 10.3.3.210 -j ACCEPT
-A OUTPUT -p tcp -m tcp --dport 22 -d 10.3.3.210 -j ACCEPT

# syslog
-A INPUT -p udp --sport 514 -s 10.3.3.208/29 -j ACCEPT
-A OUTPUT -p udp --dport 514 -d 10.3.3.208/29 -j ACCEPT

# printing (ipp)
# to ballonmanager
-A INPUT -p tcp --sport 631 -s 10.3.3.149 -j ACCEPT
-A INPUT -p udp --sport 631 -s 10.3.3.149 -j ACCEPT
-A OUTPUT -p tcp --dport 631 -d 10.3.3.149 -j ACCEPT
-A OUTPUT -p udp --dport 631 -d 10.3.3.149 -j ACCEPT
# to authprint
-A INPUT -p tcp --sport 631 -s 10.3.3.211 -j ACCEPT
-A INPUT -p udp --sport 631 -s 10.3.3.211 -j ACCEPT
-A OUTPUT -p tcp --dport 631 -d 10.3.3.211 -j ACCEPT
-A OUTPUT -p udp --dport 631 -d 10.3.3.211 -j ACCEPT

# printing (ldp)
-A INPUT -p udp --sport 515 -s 10.3.3.216 -j ACCEPT
-A INPUT -p tcp --sport 515 -s 10.3.3.216 -j ACCEPT
-A OUTPUT -p udp --dport 515 -d 10.3.3.216 -j ACCEPT
-A OUTPUT -p tcp --dport 515 -d 10.3.3.216 -j ACCEPT

# ldap to servers
-A INPUT -p tcp --sport 389 -s 10.3.3.210/31 -j ACCEPT
-A OUTPUT -p tcp --dport 389 -d 10.3.3.210/31 -j ACCEPT
-A INPUT -p tcp --sport 636 -s 10.3.3.210/31 -j ACCEPT
-A OUTPUT -p tcp --dport 636 -d 10.3.3.210/31 -j ACCEPT

# printing (samba)
# allow ICMP ping incoming client request from servers
-A INPUT -p icmp --icmp-type 8 -s 10.3.3.208/29 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
-A OUTPUT -p icmp --icmp-type 0 -d 10.3.3.208/29 -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp --icmp-type 8 -m state --state NEW,ESTABLISHED,RELATED -j drop-n-log
-A OUTPUT -p icmp --icmp-type 0 -m state --state ESTABLISHED,RELATED -j drop-n-log

-A INPUT -p icmp --icmp-type 3 -s 10.3.3.210 -j ACCEPT

# disable outgoing ICMP request
-A OUTPUT -p icmp --icmp-type 8 -j drop-n-log

# ypbind sends this out to find the fastest server
# unknown state
-A OUTPUT -p icmp -j ACCEPT

# what else
# -A INPUT -m state --state ESTABLISHED,RELATED -j accept-in-log
# -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j accept-out-log

# drop rest
-A OUTPUT -j drop-n-log
-A INPUT -j drop-n-log

COMMIT
