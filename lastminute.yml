---
# this needs to be first as ldap requires it
- name: pre-configure apt
  hosts: all
  roles:
    - role: apt

- name: configure coachview machines
  hosts: coachview*
  roles:
    - role: coachview

- name: configure contestant machines
  hosts: contestants
  roles:
    - role: cups
    - role: ldapclient
      tags: ldapclient
      when: ldap_domain is defined
    - role: hyperthreadingdisabled
    - role: reverseproxy
      when: enable_reverseproxy is defined and enable_reverseproxy
    - role: p100
    - role: ccstools
      when: ccs  == "domjudge"
    - role: taskset_run_scripts
    - role: vlc
      when: enable_vlc is defined and enable_vlc
    - role: iptablesrules

  tasks:
    - name: python3.7.12 docs
      ansible.builtin.unarchive:
        src: files/python3.7-html.tar.gz
        dest: /

    - name: py3 docs desktop
      ansible.builtin.copy:
        src: "files/{{ item }}"
        dest: "/usr/share/applications/{{ item }}"
      loop:
        - py3langref.desktop
        - py3stdlib.desktop

    - name: switch from files to compat in nsswitch
      tags: nsswitch
      ansible.builtin.replace:
        path: /etc/nsswitch.conf
        regexp: '^{{ item }}(.*)files'
        replace: "{{ item }}\\1compat"
        owner: root
        group: root
        mode: '0644'
      loop:
        - passwd
        - group
        - shadow
      notify:
        - reboot
      when: ldap_domain is defined
    - name: disable systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        state: stopped
        enabled: false
        masked: true

    - name: remove icpc user
      ansible.builtin.user:
        name: "icpc"
        state: absent
      when: root_password is defined

    - name: workaround nautilus auto-mounting
      ansible.builtin.file:
        path: /media
        owner: root
        group: root
        mode: "0700"

    - name: use policykit to disable mounting for teams
      ansible.builtin.copy:
        dest: /etc/polkit-1/localauthority/50-local.d/disable-udisks.pkla
        content: |
          [Block access to udisks for teams]
          Identity=unix-user:*
          Action=org.freedesktop.udisks2.*
          ResultAny=no
          ResultInactive=no
          ResultActive=no
        mode: 0644
    - name: gvfs/gvfsd permission tweaking to disable
      ansible.builtin.file:
        path: /usr/lib/gvfs/{{ item }}
        owner: root
        group: root
        mode: "0744"
      loop:
        - "gvfsd-burn"
        - "gvfsd-computer"
        - "gvfsd-localtest"
    - name: place 21_icpc-disable-automount-schema.gschema.override
      ansible.builtin.copy:
        content: |
          [org.gnome.desktop.media-handling]
          automount-open=false
          automount=false
        dest: /usr/share/glib-2.0/schemas/21_icpc-disable-automount-schema.gschema.override
        owner: root
        group: root
        mode: '0644'
      notify: glib-compile-schemas
  handlers:
    - name: glib-compile-schemas
      ansible.builtin.command: glib-compile-schemas /usr/share/glib-2.0/schemas
    - name: reboot
      ansible.builtin.reboot:

- name: configure ldap server
  hosts: ldapserver
  roles:
    - role: ldapserver
      tags: ldapserver

- name: Send syslogs to `backup`
  hosts: all:!backup
  tasks:
    - name: point rsyslog to backup
      ansible.builtin.copy:
        content: |
          # ship the important logs to backup
          kern.warning                    @backup
          auth,authpriv.*                 @backup
        dest: /etc/rsyslog.d/70-clients.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart rsyslog
  handlers:
    - name: restart rsyslog
      ansible.builtin.service:
        name: rsyslog
        state: restarted

- name: lastminute config for all hosts
  hosts: all
  collections:
    - community.general
  roles:
    - role: stuvusIT.systemd-timesyncd
      timesync_timezone: "{{ timezone }}"
      timesync_ntp_hosts:
        - "{{ baseip }}.208"
        - "{{ baseip }}.209"
        - "{{ baseip }}.210"
      timesync_fallback_ntp_hosts:
        - "{{ baseip }}.208"
        - "{{ baseip }}.209"
        - "{{ baseip }}.210"
      tags: systemd-timesyncd

  tasks:
    # stat file first
    - name: get file stat of JudgingNotes to be able to perform a check in the following task
      stat: path=`files/"{{ contest_detail }}".JudgingNotes."{{ papersize }}".pdf`
      register: judgingnotes

    - name: copy JudgingNotes.pdf
      ansible.builtin.copy:
        src: 'files/"{{ contest_detail }}".JudgingNotes."{{ papersize }}".pdf'
        dest: /usr/share/doc/icpc/JudgingNotes.pdf
      when: judgingnotes.stat.exists

    - name: get file stat of TechNotes to be able to perform a check in the following task
      stat: path=`files/"{{ contest_detail }}".TechNotes."{{ papersize }}".pdf`
      register: technotes

    - name: copy TechNotes.pdf
      ansible.builtin.copy:
        src: 'files/"{{ contest_detail }}".TechNotes."{{ papersize }}".pdf'
        dest: /usr/share/doc/icpc/TechNotes.pdf
      when: technotes.stat.exists

    - name: DOMJudge only bits
      when: '"{{ ccs }}" == "domjudge"'
      block:
        - name: copy domjudge TeamGuide.pdf (if ccs == domjudge)
          ansible.builtin.copy:
            src: files/"{{ contest_detail }}-domjudge-team-manual.pdf"
            dest: /usr/share/doc/icpc/TeamGuide.pdf

        - name: add domjudge to /etc/hosts
          ansible.builtin.lineinfile:
            path: /etc/hosts
            line: "{{ baseip }}.{{ item.ip }}   {{ item.hostname }}" # noqa: no-tabs
            owner: root
            group: root
            mode: '0644'
          loop:
            - { ip: 215, hostname: domjudge }

        - name: change firefox to domjudge
          ansible.builtin.copy:
            src: files/domjudge.firefox.desktop
            dest: /usr/share/applications/firefox.desktop

        - name: add domjudge doc dir
          ansible.builtin.file:
            path: /usr/share/apps/domjudge
            state: directory

        - name: add domjudge png
          ansible.builtin.copy:
            src: files/DOMjudgelogo.png
            dest: /usr/share/apps/domjudge/DOMjudgelogo.png

        - name: add domjudge desktop entry
          ansible.builtin.copy:
            src: files/domjudge.desktop
            dest: /usr/share/applications/domjudge.desktop

    # local accounts bit
    - name: Create group teams
      ansible.builtin.group:
        name: teams
        gid: 3000

    - name: copy the per contest bits
      ansible.builtin.copy:
        src: "{{ contest }}.teams.tar.gz"
        dest: "/root/{{ contest }}.teams.tar.gz"
    # this should be fixed in the icpc2021 package
    - name: enable Evince and Evince-preview desktop files
      ansible.builtin.file:
        name: /usr/share/applications/org.gnome.{{ item }}.desktop
        mode: 0644
      loop:
        - Evince
        - Evince-previewer
    - name: Pre-generate the kernel flags for ansible usage
      ansible.builtin.set_fact:
        procline: "quiet ipv6.disable=1 cgroup_enable=memory swapaccount=1 i915.force_probe=4690"
    - name: Ensure /etc/default/grub has proper GRUB_CMDLINE_LINUX_DEFAULT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*$'
        replace: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ procline }}\""
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub
        - reboot
    - name: Ensure /etc/default/grub has proper GRUB_TIMEOUT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: "GRUB_TIMEOUT=.*"
        replace: "GRUB_TIMEOUT=3"
        owner: root
        group: root
        mode: '0644'
      notify:
        - update grub

    - name: update root password (if root_password already crypted)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password }}"
      when:
        - root_password is defined
        - '"$6$" in root_password'
    - name: update root password (if root_password is cleartext)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password | password_hash('sha512', job_sheet) }}"
      when:
        - root_password is defined
        - '"$6$" not in root_password'

    - name: Get GIT revision
      ansible.builtin.shell: |
          set -o pipefail
          git rev-list --full-history --all --abbrev-commit | head -1
          exit 0
      args:
        executable: /bin/bash
      become: false
      register: git_revision
      delegate_to: 127.0.0.1
      changed_when: false

    - name: Log version of script on client
      community.general.syslogger:
        ident: "lastminute"
        msg: "Ansible applied {{ version }} - ({{ git_revision.stdout }})"
        priority: "notice"
      changed_when: false
  handlers:
    - name: update grub
      ansible.builtin.command: /usr/sbin/update-grub
    - name: reboot
      ansible.builtin.reboot:

- name: configure the reverse proxy
  hosts: reverseproxy
  roles:
    - role: reverseproxy
      reverseproxy_server: true
      tags: reverseproxy

- name: configure the cds
  hosts: cds
  roles:
    - role: cds
      tags: cds

- name: configure balloonmanager printers
  hosts: balloonmanager
  vars:
    job_sheet: none
    device_uri: 'printers/balloonprinter'
    printer_name: balloonprinter
  roles:
    - role: cups

- name: configure ccsadmin printers
  hosts: ccsadmin*
  vars:
    job_sheet: none
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups

- name: configure judges printers
  hosts: judge*
  vars:
    job_sheet: none
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups

- name: configure others printers
  hosts: others:!authprint
  vars:
    job_sheet: none
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups
