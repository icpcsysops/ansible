---
# this needs to be first as ldap requires it
- name: Pre-configure apt
  hosts: all
  roles:
    - role: apt
      tags: apt

- name: Configure packages machines
  hosts: packages
  roles:
    - role: icpc_host_packages
      tags: icpc_host_packages

- name: Configure scoreboard machine
  hosts: packages,scoreboard
  roles:
    - role: scoreboard
      tags: scoreboard

- name: Configure backups
  hosts: backup*
  roles:
    - role: dnsmasq
    - role: icpc_host_backup
      tags: icpc_host_backup
    # script_server needs to come after the hosts file has been configured (because it needs to lookup some hostnames)
    - role: script_server
      tags: script_server

- name: Configure extra_nic machines
  hosts: backup, scoreboard, printsrv, cds, packages
  tags: extra_nics
  tasks:
    - name: Configure nics
      ansible.builtin.include_role:
        name: extra_nic
      vars:
        extra_nic_config: "{{ item }}"
      loop: "{{ extra_nic_configs }}"

- name: Configure coachview machines
  hosts: coachview*
  roles:
    - role: coachview

- name: Configure everything but contestants and ntpservers to use backup for dns
  hosts: judges,others,!ntpservers
  tasks:
    - name: Configure dns client
      ansible.builtin.import_role:
        name: dnsmasq
        tasks_from: client.yml
      tags: dnsmasq

- name: Configure servers (but not DOMjudge) to run node exporter
  hosts: all:!dom*
  roles:
    - role: prometheus_target_all
      tags: prom

- name: Configure contestant machines
  hosts: contestants
  roles:
    - role: cups
    - role: team
    - role: mediamtx
      when: enable_hls is defined and enable_hls
    - role: ldapclient
      tags: ldapclient
      when: ldap_domain is defined
    - role: hyperthreadingdisabled
    - role: reverseproxy
      when: enable_reverseproxy is defined and enable_reverseproxy
    - role: p100
    - role: ccstools
      tags: ccstools
      when: ccs  == "domjudge"
    - role: taskset_run_scripts
    - role: vlc
      when: enable_vlc is defined and enable_vlc
      tags: vlc
    - role: iptablesrules
      tags: iptablesrules
    - role: martkeys
      when: disable_martkeys is not defined or not disable_martkeys

  tasks:
    # more things to fix in icpc-pycharm
    - name: Stat pycharm python_stubs
      ansible.builtin.stat:
        path: /etc/skel/.config/JetBrains/PyCharmCE2022.3/system/python_stubs
      register: python_stubs

    - name: Extract python_stubs if missing
      ansible.builtin.unarchive:
        src: files/pycharm/python_stubs.tar.gz
        dest: /etc/skel/.config/JetBrains/PyCharmCE2022.3/system
      when: not python_stubs.stat.exists

    # fixed in package icpc-pycharm
    - name: Fix pycharm .config/JetBrains/PyCharmCE2022.3 with pypy3
      ansible.builtin.copy:
        src: files/pycharm/{{ item }}
        dest: /etc/skel/.config/JetBrains/PyCharmCE2022.3/config/options/{{ item }}
        mode: '0644'
        owner: root
        group: root
      loop:
        - jdk.table.xml
        - other.xml

    # fixed in package icpc-pycharm
    - name: Fix pycharm workspace with pypy3
      ansible.builtin.copy:
        src: files/pycharm/PycharmProject.iml
        dest: /etc/skel/workspace/PycharmProject/.idea/PycharmProject.iml
        mode: '0644'
        owner: root
        group: root

    # TODO fixed in package icpc-pycharm
    - name: Remove broken links from venv
      ansible.builtin.file:
        state: absent
        path: /etc/skel/workspace/PycharmProject/venv/lib/{{ item }}
      loop:
        - libdchtvm.so.9
        - libdchapi64.so
        - libdchapi.so.5
        - libdchapi.so.9
        - libdchbas64.so
        - libdchbas.so.5
        - libdchbas.so.9
        - libdchcfl64.so
        - libdchcfl.so.5
        - libdchcfl.so.9
        - libdchesm64.so
        - libdchesm.so.5
        - libdchesm.so.9
        - libdchipm64.so
        - libdchipm.so.5
        - libdchipm.so.9
        - libdchtvm64.so
        - libdchtvm.so.5
        - libdchtvm.so.5
        - modules-load.d
    # TODO fixed in this to icpc2024
    - name: Disable idle-dim
      ansible.builtin.copy:
        dest: /usr/share/glib-2.0/schemas/21_icpc_power_schema.gschema.override
        content: |
          [org.gnome.settings-daemon.plugins.power]
          idle-dim=false
        mode: '0644'
      notify: Glib-compile-schemas

    - name: Cleanup domjudge.desktop,  renaming to ccs.desktop
      ansible.builtin.file:
        name: /usr/share/applications/domjudge.desktop
        state: absent

    - name: Install stress-ng
      ansible.builtin.apt:
        pkg: stress-ng
        state: present

    # TODO fixed in icpc2024
    - name: Remove ampersand from iptablesload
      ansible.builtin.replace:
        path: /etc/network/if-pre-up.d/iptablesload
        regexp: " &"
        replace: ""
        owner: root
        group: root
        mode: '0755'

    - name: Switch from files to compat in nsswitch
      tags: nsswitch
      ansible.builtin.replace:
        path: /etc/nsswitch.conf
        regexp: '^{{ item }}(.*)files'
        replace: "{{ item }}\\1compat"
        owner: root
        group: root
        mode: '0644'
      loop:
        - passwd
        - group
        - shadow
      notify:
        - Reboot
      when: ldap_domain is defined
    - name: Disable systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        state: stopped
        enabled: false
        masked: true
      # don't disable dns if we're using public packages
      when: not disable_sources_list_changes

    # local accounts bit
    - name: Create group teams
      ansible.builtin.group:
        name: teams
        gid: 3000

    - name: Copy the per contest bits
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/root/{{ contest }}.teams.tar.gz"
        mode: '0600'
      with_first_found:
        - files:
            - "{{ contest }}.teams.tar.gz"
          skip: true

    # TODO icpc2024 name it icpc
    - name: Remove icpc* user
      ansible.builtin.user:
        name: "{{ item }}"
        state: absent
      loop:
        - "icpc"
        - "icpc2023"
      when: root_password is defined

    - name: Workaround nautilus auto-mounting
      ansible.builtin.file:
        path: /media
        owner: root
        group: root
        mode: "0700"

    - name: Use policykit to disable mounting for teams
      ansible.builtin.copy:
        dest: /etc/polkit-1/localauthority/50-local.d/disable-udisks.pkla
        content: |
          [Block access to udisks for teams]
          Identity=unix-user:*
          Action=org.freedesktop.udisks2.*
          ResultAny=no
          ResultInactive=no
          ResultActive=no
        mode: '0644'
    - name: Fix gvfsd permission tweaking to disable
      ansible.builtin.file:
        path: /usr/libexec/{{ item }}
        owner: root
        group: root
        mode: "0744"
      loop:
        - "gvfsd-burn"
        - "gvfsd-computer"
        - "gvfsd-localtest"

    - name: Place 21_icpc-disable-automount-schema.gschema.override
      ansible.builtin.copy:
        content: |
          [org.gnome.desktop.media-handling]
          automount-open=false
          automount=false
        dest: /usr/share/glib-2.0/schemas/21_icpc-disable-automount-schema.gschema.override
        owner: root
        group: root
        mode: '0644'
      notify: Glib-compile-schemas

    - name: Copy fixed runc and runcpp scripts
      ansible.builtin.copy:
        src: files/{{ item }}
        dest: /usr/local/bin/{{ item }}
        mode: '0755'
        owner: root
        group: root
      loop:
        - runc
        - runcpp
  handlers:
    - name: Glib-compile-schemas
      ansible.builtin.command: glib-compile-schemas /usr/share/glib-2.0/schemas
      changed_when: false
    - name: Reboot
      ansible.builtin.reboot:

- name: Configure ldap server
  hosts: ldapserver
  roles:
    - role: ldapserver
      tags: ldapserver

- name: Send syslogs to `backup`
  hosts: all:!backup
  tasks:
    - name: Point rsyslog to backup
      ansible.builtin.copy:
        content: |
          # ship the important logs to backup
          kern.warning                    @backup
          auth,authpriv.*                 @backup
        dest: /etc/rsyslog.d/70-clients.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart rsyslog
  handlers:
    - name: Restart rsyslog
      ansible.builtin.service:
        name: rsyslog
        state: restarted

- name: Install/configure systemd-timesyncd on everything but the ntp servers
  hosts: all:!ntpservers
  roles:
    - role: stuvusIT.systemd-timesyncd
      timesync_timezone: "{{ timezone }}"
      timesync_ntp_hosts: "{{ ntp_hosts }}"
      timesync_fallback_ntp_hosts: "{{ fallback_ntp_hosts }}"
      tags: systemd-timesyncd

- name: Set up our ntp servers
  hosts: ntpservers
  roles:
    - role: ntp
      tags: ntp

- name: Lastminute config for all hosts
  hosts: all
  roles:
    - role: firefox_desktop

  vars:
    judging_notes: "{{ '/root/ansible/files/%s.JudgingNotes.%s.pdf'|format(contest_detail, papersize) }}"
    tech_notes: "{{ '/root/ansible/files/%s.TechNotes.%s.pdf'|format(contest_detail, papersize) }}"
    judging_addendum_notes: "{{ '/root/ansible/files/%s.JudgingNotes.Addendum.%s.pdf'|format(contest_detail, papersize) }}"

  tasks:
    # stat file first
    - name: Get file stat of JudgingNotes to be able to perform a check in the following task
      tags: icpc_docs
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ judging_notes }}"
      register: judgingnotes

    - name: Copy JudgingNotes.pdf
      tags: icpc_docs
      ansible.builtin.copy:
        src: "{{ judging_notes }}"
        dest: /usr/share/doc/icpc/JudgingNotes.pdf
        mode: '0644'
      when: judgingnotes.stat.exists

    - name: Get file stat of JudgingNotes.Addendum to be able to perform a check in the following task
      tags: icpc_docs
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ judging_addendum_notes }}"
      register: judging_notes_addendum

    # TODO in future we might want to only drop judgingnotes_addendum.desktop if we have these.
    - name: Copy JudgingNotes.Addendum.pdf
      tags: icpc_docs
      ansible.builtin.copy:
        src: "{{ judging_addendum_notes }}"
        dest: /usr/share/doc/icpc/JudgingNotes.Addendum.pdf
        mode: '0644'
      when: judging_notes_addendum.stat.exists

    - name: Get file stat of TechNotes to be able to perform a check in the following task
      tags: icpc_docs
      delegate_to: localhost
      ansible.builtin.stat:
        path: "{{ tech_notes }}"
      register: technotes

    - name: Copy TechNotes.pdf
      tags: icpc_docs
      ansible.builtin.copy:
        src: "{{ tech_notes }}"
        dest: /usr/share/doc/icpc/TechNotes.pdf
        mode: '0644'
        owner: root
        group: root
      when: technotes.stat.exists

    - name: Pre-generate the kernel flags for ansible usage
      ansible.builtin.set_fact:
        procline: "quiet ipv6.disable=1 cgroup_enable=memory swapaccount=1 i915.force_probe=4690"
    - name: Ensure /etc/default/grub has proper GRUB_CMDLINE_LINUX_DEFAULT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=.*$'
        replace: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ procline }}\""
        owner: root
        group: root
        mode: '0644'
      notify:
        - Update grub
        - Reboot

    - name: Ensure /etc/default/grub has proper GRUB_TIMEOUT
      ansible.builtin.replace:
        path: /etc/default/grub
        regexp: "GRUB_TIMEOUT=.*"
        replace: "GRUB_TIMEOUT=3"
        owner: root
        group: root
        mode: '0644'
      notify:
        - Update grub

    - name: Update root password (if root_password already crypted)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password }}"
      when:
        - root_password is defined
        - '"$6$" in root_password'

    - name: Update root password (if root_password is cleartext)
      ansible.builtin.user:
        name: "root"
        state: present
        password: "{{ root_password | password_hash('sha512', root_password) }}"
      when:
        - root_password is defined
        - '"$6$" not in root_password'

    - name: Get GIT revision
      ansible.builtin.shell: |
          set -o pipefail
          git rev-list --full-history --all --abbrev-commit | head -1
          exit 0
      args:
        executable: /bin/bash
      become: false
      register: git_revision
      delegate_to: localhost
      changed_when: false

    - name: Ensure apport is not installed
      ansible.builtin.package:
        pkg: apport
        state: absent

    - name: Log version of script on client
      community.general.syslogger:
        ident: "lastminute"
        msg: "Ansible applied {{ version }} - ({{ git_revision.stdout }})"
        priority: "notice"
      changed_when: false
  handlers:
    - name: Update grub
      ansible.builtin.command: /usr/sbin/update-grub
      changed_when: false
    - name: Reboot
      ansible.builtin.reboot:
      when: reboot_enabled

- name: Configure the reverse proxy
  hosts: reverseproxy
  roles:
    - role: reverseproxy
      reverseproxy_server: true
      tags: reverseproxy

- name: Configure cds as the git server
  hosts: cds
  roles:
    - role: cds_for_icpc
      tags: cds_for_icpc

- name: Configure the cds instances (new style)
  hosts: cds*
  roles:
    - role: cds
      tags: cds

- name: Configure balloonmanager printers
  hosts: balloonmanager
  vars:
    device_uri: 'printers/balloonprinter'
    printer_name: balloonprinter
  roles:
    - role: cups
    - role: balloonprinter

- name: Configure ccsadmin printers
  hosts: ccsadmin*
  vars:
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups

- name: Configure judges printers
  hosts: judge*
  vars:
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups
    - role: ccstools
      when: ccs  == "domjudge"
    - role: reverseproxy
      when: enable_reverseproxy is defined and enable_reverseproxy

- name: Configure others printers
  hosts: others:!printsrv
  vars:
    device_uri: 'printers/systemsprinter'
    printer_name: systemsprinter
  roles:
    - role: cups

- name: Configure printserver
  hosts: printsrv
  roles:
    - role: printserver
      tags: printserver


- name: Configure analysts
  hosts: analysts
  roles:
    - role: ccstools
